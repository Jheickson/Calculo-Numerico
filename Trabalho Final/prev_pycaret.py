# -*- coding: utf-8 -*-
"""Prev Pycaret.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mFoq115_uMqFpEWZJ68JIvEwlacx0kGU
"""

import pandas as pd

# Ler o arquivo .xlsx
df = pd.read_excel('/content/Dados de Novembro.xlsx', sheet_name='Planilha1')

df
df.info()

# Carregar o arquivo .xlsx
dados = pd.read_excel("/content/Dados de Novembro.xlsx")

# Filtrar os dados
dados_filtrados = dados[(dados["Temperatura"] >= 0) & (dados["Umidade"] >= 0)]

# Converter as colunas de data e hora para o formato apropriado
dados_filtrados["Data"] = pd.to_datetime(dados_filtrados["Data"], format="%d/%m/%Y")
dados_filtrados["Hora"] = pd.to_timedelta(dados_filtrados["Hora"])

# Combinar as colunas de data e hora em uma única coluna
dados_filtrados["DataHora"] = dados_filtrados["Data"] + dados_filtrados["Hora"]

# Definir a coluna "DataHora" como o índice
dados_filtrados.set_index("DataHora", inplace=True)

# Reamostrar os dados para uma frequência de 30 minutos
dados_reamostrados = dados_filtrados.resample("30T").mean()

# Verificar os primeiros registros dos dados reamostrados
print(dados_reamostrados.head())

dados_reamostrados

from statsmodels.tsa.arima.model import ARIMA

# Realizar a previsão da série temporal da coluna "Temperatura" utilizando ARIMA
temperatura_serie = dados_reamostrados["Temperatura"]

# Definir os parâmetros do modelo ARIMA (exemplo fictício)
ordem = (1, 0, 1)  # Ordem do modelo ARIMA (p, d, q)

# Criar o modelo ARIMA
modelo_arima = ARIMA(temperatura_serie, order=ordem)

# Ajustar o modelo aos dados
modelo_arima_fit = modelo_arima.fit()

# Fazer a previsão para os próximos n passos (exemplo fictício)
n_passos = 1000
previsao = modelo_arima_fit.forecast(steps=n_passos)

# Imprimir a previsão
print("Previsão da série temporal:")
print(previsao)

import matplotlib.pyplot as plt

# ...

# Imprimir a previsão
print("Previsão da série temporal:")
print(previsao)

# Plotar os dados originais e a previsão
plt.figure(figsize=(12, 6))
plt.plot(temperatura_serie, label='Dados Originais')
plt.plot(previsao, label='Previsão')
plt.title('Previsão da Série Temporal de Temperatura')
plt.xlabel('Tempo')
plt.ylabel('Temperatura')
plt.legend()
plt.show()

!pip install pycaret-ts-alpha

from pycaret.timeseries import *

# Criar um dataframe de séries temporais usando o PyCaret
dados_pycaret = pd.DataFrame({"ds": dados_reamostrados.index, "y": dados_reamostrados["Temperatura"]})

# Inicializar o ambiente PyCaret para previsão de séries temporais
ts_setup = setup(data=dados_pycaret, session_id=42, data_split_pct=70, fold_strategy="timeseries", time_features=["ds"], target="y")

# Comparar modelos de previsão de séries temporais
best_model = compare_models()

# Treinar o melhor modelo
model = finalize_model(best_model)

# Fazer a previsão
previsao = predict_model(model)

# Imprimir a previsão
print("Previsão da série temporal:")
print(previsao)